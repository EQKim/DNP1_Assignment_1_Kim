@page "/CreatePostPage"
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="full-page">
    <div class="login-container">
        <h3 style="font-weight: bold">Create Post</h3>
        <div>
            <label for="title">Title:</label>
            <input type="text" id="title" @bind="Title"/>
        </div>
        <div>
            <label for="context">Content:</label>
            <textarea id="context" @bind="Context"></textarea>
        </div>
        <div>
            <button style="font-weight: bold" @onclick="CreatePost">Create Post</button>
        </div>
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <p style="color: red">@ErrorMessage</p>
        }
    </div>
</div>

@code {
    string Title { get; set; }
    string Context { get; set; }
    string ErrorMessage { get; set; }
    string Username { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState?.User?.Identity?.Name != null)
        {
            Username = authState.User.Identity.Name;
        }
        else
        {
            ErrorMessage = "User is not authenticated.";
        }
    }

    private async Task CreatePost()
    {
        if(string.IsNullOrEmpty(Username))
        {
            ErrorMessage = "User is not authenticated.";
            return;
        }

        var client = HttpClientFactory.CreateClient("NoSSL");

        var postPayload = new
        {
            Title = this.Title,
            Context = this.Context,
            Username = Username
        };

        var response = await client.PostAsJsonAsync("Post/CreatePost", postPayload);

        if (response.IsSuccessStatusCode)
        {
            ErrorMessage = "Post created successfully!";
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ErrorMessage = "An unexpected error occurred: " + await response.Content.ReadAsStringAsync();
        }
    }
}
